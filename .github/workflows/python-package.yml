# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: LiuOS Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  Build-ubuntu-2204:
    name: "Build on Ubuntu"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Internet check
      run: |
        wget liuwoodscode.github.io -d -v -U "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.1 Safari/605.1.15"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install termcolor
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run the program
      env: 
        Cmd: uname -a
      run: |
        python ./core.py
        cat ./LiuOS.log >> $GITHUB_STEP_SUMMARY
  Build-Windows-Server:
    name: "Build on Windows Server"
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install things from pip
      run: |
        pip install termcolor
    - name: Set up the credential file
      shell: pwsh
      run: |
        python ./setup.py
    - name: Run the thing
      shell: pwsh
      run: |
        python ./core.py
        cat ./LiuOS.log

        
  Build-macOS:
    name: "Build on macOS"
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install things from pip
      run: |
        pip install termcolor
    - name: Set up the credential file
      env:
      run: |
        python ./setup.py
    - name: Run the thing
      env:
        Cmd: uname -a
      run: |
        python ./core.py
        cat ./LiuOS.log


  Build-macOS_System:
    name: "Build on macOS (System version of Python as of Feb 2023)"
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install things from pip
      run: |
        pip install termcolor
    - name: Set up the credential file
      env:
      run: |
        python ./setup.py
    - name: Run the thing
      env:
        Cmd: uname -a
      run: |
        python ./core.py
        cat ./LiuOS.log

